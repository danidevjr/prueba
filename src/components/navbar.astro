---
const navItems = [
  {
    title: "Inicio",
    label: "Inicio",
    url: "/#Inicio",
  },
  {
    title: "Cotización",
    label: "Cotización",
    url: "/#Cotizacion",
  },
  {
    title: "Cuenta de cobro",
    label: "cuenta-de-cobro",
    url: "/#cuenta-cobro",
  },
]
---
<h1 class="flex items-center mt-2 pl-6 pr-3 text-4xl font-bold text-yellow-500">
  <a href="/#inicio" class="flex items-center">
    <img src="wallet.webp" alt="Wallet Icon" class="h-8 w-8 mr-2" /> WalletFull
  </a>
</h1>
<nav class="flex px-3 text-xl font-medium rounded-full text-gray-600 dark:text-gray-200 justify-center items-center">
  {
    navItems.map((link) => (
      <a
        class="relative block px-2 py-2 transition hover:text-yellow-500 dark:hover:text-yellow-400"
        aria-label={link.label}
        href={link.url}
      >
        {link.title}
      </a>
    ))
  }
</nav>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section")
    const navItems = document.querySelectorAll("header nav a")

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") == entry.target.id) {
              item.classList.add("text-yellow-500")
            } else {
              item.classList.remove("text-yellow-500")
            }
          })
        }
      })
    }

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.3,
    })

    sections.forEach((section) => {
      observer.observe(section)
    })

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect()
      } else {
        sections.forEach((section) => {
          observer.observe(section)
        })
      }
    }
  })
</script>

<style>

</style>